<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gdu.app11.mapper.EmpListMapper">

	<!-- employees와 departments의 조인을 위한 resultMap 만들기 - 1 -->
	<resultMap type="DeptDTO" id="DeptMap">
		<id column="DEPARTMENT_ID" property="departmentId" />
		<result column="DEPARTMENT_NAME" property="departmentName" />
		<result column="MANAGER_ID" property="managerId" />
		<result column="LOCATION_ID" property="locationId" />
	</resultMap>
	<resultMap type="EmpDTO" id="EmpMap">
		<id column="EMPLOYEE_ID" property="employeeId" />
		<result column="FIRST_NAME" property="firstName" />
		<result column="LAST_NAME" property="lastName" />
		<result column="EMAIL" property="email" />
		<result column="PHONE_NUMBER" property="phoneNumber" />
		<result column="HIRE_DATE" property="hireDate" />
		<result column="JOB_ID" property="jobId" />
		<result column="COMMISSION_PCT" property="commissionPct" />
		<result column="SALARY" property="salary" />
		<result column="MANAGER_ID" property="managerId" />
		<collection resultMap="DeptMap" property="deptDTO"></collection>
	</resultMap>
	
	<select id="selectAllEmployeesCount" resultType="int">
		SELECT COUNT(*)
		  FROM EMPLOYEES
	</select>
	
	<select id="selectEmployeesUsingScroll" parameterType="Map" resultMap="EmpMap">  <!-- resultType이 아니라 resultMap이다! -->
		SELECT A.*
		  FROM (SELECT ROW_NUMBER() OVER(ORDER BY E.EMPLOYEE_ID DESC) AS RN, E.*, D.DEPARTMENT_NAME, D.LOCATION_ID
		          FROM DEPARTMENTS D RIGHT OUTER JOIN EMPLOYEES E
		            ON D.DEPARTMENT_ID = E.DEPARTMENT_ID) A
		 WHERE A.RN BETWEEN #{begin} AND #{end}
	</select>
	
	<select id="selectEmployeesUsingPaging" parameterType="Map" resultMap="EmpMap">  <!-- resultType이 아니라 resultMap이다! -->
		
		<!-- 부서번호가 없는 사원이 있어서 외부 조인으로 처리 -->
		
		<!-- 1. ROWNUM 가상 칼럼 사용 -->
		<!--
		SELECT B.*
		  FROM (SELECT ROWNUM AS RN, A.*
		          FROM (SELECT E.*, D.DEPARTMENT_NAME, D.LOCATION_ID
		                  FROM DEPARTMENTS D RIGHT OUTER JOIN EMPLOYEES E
		                    ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
		                  ORDER BY <choose>
									 <when test="title=='DEPARTMENT_ID'">E.DEPARTMENT_ID</when>
									 <otherwise>${title}</otherwise>
								   </choose> ${order}) A) B
		 WHERE B.RN BETWEEN #{begin} AND #{end}
		-->
		
		<!-- 2. ROW_NUMBER() 함수 사용 -->
		SELECT A.*
		  FROM (SELECT ROW_NUMBER() OVER(ORDER BY <choose>
													<when test="title=='DEPARTMENT_ID'">E.DEPARTMENT_ID</when>
													<otherwise>${title}</otherwise>
												  </choose> ${order}) AS RN, E.*, D.DEPARTMENT_NAME, D.LOCATION_ID
		          FROM DEPARTMENTS D RIGHT OUTER JOIN EMPLOYEES E
		            ON D.DEPARTMENT_ID = E.DEPARTMENT_ID) A
		 WHERE A.RN BETWEEN #{begin} AND #{end}
		  
	</select>

</mapper>